import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Grafo {
    private Map<String, List<String>> grafo;

    public Grafo(){
        grafo = new HashMap<>();
    }

    public void adicionarVertice(String vertice) {
        if (!grafo.containsKey(vertice)) {
            grafo.put(vertice, new ArrayList<>());
        }
    }

    public void adicionarAresta(String origem, String destino) {
        if (grafo.containsKey(origem) && grafo.containsKey(destino)) {
            grafo.get(origem).add(destino);
        }
    }

    public void verificarLigacao() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Digite o vertice de origem:");
        String origem = sc.nextLine().toUpperCase();
        System.out.println("Digite o vertice de destino:");
        String destino = sc.nextLine().toUpperCase();

        if(!grafo.containsKey(origem) || !grafo.containsKey(destino)) {
            System.out.println("Origem/Destino nao existe.");
            return;
        }

        if(grafo.get(origem).contains(destino)) {
            System.out.println("Existe ligacao: " + origem + " -> " + destino);
        } else {
            System.out.println("Nao existe ligacao entre " + origem + " e " + destino);
        }
    } 
}

public class AtvGrafo4 {
    public static void main(String[] args) {
        Grafo grafo = new Grafo();

        grafo.adicionarVertice("A");
        grafo.adicionarVertice("B");
        grafo.adicionarVertice("C");
        grafo.adicionarVertice("D");
        grafo.adicionarVertice("E");

        grafo.adicionarAresta("A", "B");
        grafo.adicionarAresta("B", "C");
        grafo.adicionarAresta("C", "D");
        grafo.adicionarAresta("D", "A");

        grafo.verificarLigacao();
    }
}
